using System; using System.Collections.Generic; using System.Linq; using System.Text; using Android.App; using Android.Content; using Android.OS; using Android.Runtime; using Android.Views; using Android.Widget; using Android.Database; using Android.Database.Sqlite;
namespace NDSR_Final_Android_Pro_Submit
{
	public class DBHelper: SQLiteOpenHelper
	{
		private const string DBName = "UserDB"; 		private const int DatabaseVersion = 1; 		private const string table_UserInfo = "UserInfo"; 		public const string idField = "_id"; 		public const string name = "FullName"; 		public const string email = "Email_Addr"; 		public const string pwd = "Password";   		private const string table_Vendors = "Vendors"; 		public const string idField1 = "_id"; 		public const string vvname = "vname"; 		public const string vaddr = "addr"; 		public const string vemail = "email"; 		public const string vpn = "pn"; 		public const string vimg = "img"; 		public const string vt1 = "t1"; 		public const string vt2 = "t2"; 		public const string vt3 = "t3"; 		public const string vt4 = "t4"; 		public const string vt5 = "t5"; 		public const string vt6 = "t6"; 		public const string vt7 = "t7"; 		public const string vt8 = "t8"; 		public const string vt9 = "t9"; 		public const string vt10 = "t10"; 		public const string vt11 = "t11"; 		public const string vt12 = "t12"; 		public const string vt13 = "t13"; 		public const string vt14 = "t14";  		private SQLiteDatabase db;   		private const string tableCreate = " CREATE TABLE UserInfo" + 			"(_id integer primary key autoincrement,FullName varchar(255),Email_Addr varchar(255),Password varchar(255));";    		private const string tableCreate1 = " CREATE TABLE Vendors" + 		"(_id  integer primary key autoincrement, vname varchar(255),addr varchar(255),email varchar(255),pn varchar(255),img INTEGER,t1 varchar(255),t2 varchar(255),t3 varchar(255),t4 varchar(255),t5 varchar(255),t6 varchar(255),t7 varchar(255),t8 varchar(255),t9 varchar(255),t10 varchar(255),t11 varchar(255),t12 varchar(255),t13 varchar(255),t14 varchar(255));";     		public DBHelper(Context context) : base(context, DBName, null, DatabaseVersion) 		{  		} 		public void openDB() 		{ 			this.db = this.WritableDatabase;   // WriteableDatabase will open an instace of SQLite;
		} 		public override void OnCreate(SQLiteDatabase db) 		{


			//'productTable'  TABLE
			int a, b, c, d, e;  			a = Resource.Drawable.a; 			b = Resource.Drawable.b; 			c = Resource.Drawable.c; 			d = Resource.Drawable.d; 			e = Resource.Drawable.e;   			db.ExecSQL(tableCreate); 			db.ExecSQL(tableCreate1);    			db.ExecSQL("INSERT INTO UserInfo(Fullname,Email_Addr,Password) VALUES ('Neerav','n@gmail.com','12345')"); 			db.ExecSQL("INSERT INTO UserInfo(Fullname,Email_Addr,Password) VALUES ('John','j@gmail.com','12345')"); 			db.ExecSQL("INSERT INTO UserInfo(Fullname,Email_Addr,Password) VALUES ('Pete','p@gmail.com','12345')"); 			db.ExecSQL("INSERT INTO UserInfo(Fullname,Email_Addr,Password) VALUES ('Melissa','m@gmail.com','12345')"); 			db.ExecSQL("INSERT INTO UserInfo(Fullname,Email_Addr,Password) VALUES ('jay','j@gmail.com','12345')"); 			db.ExecSQL("INSERT INTO UserInfo(Fullname,Email_Addr,Password) VALUES ('Neerav-Admin','admin@bookmart.ca','bookmart')");               			db.ExecSQL("INSERT INTO Vendors(vname,addr,email,pn,img,t1,t2,t3,t4,t5,t6,t7,t8,t9,t10,t11,t12,t13,t14) VALUES ('Coles','Toronto','coles@gmail.com','416233322'," + a + ",'11am','12pm','11am','12pm','11am','12pm','11am','12pm','11am','12pm','11am','12pm','11am','12pm')"); 			db.ExecSQL("INSERT INTO Vendors(vname,addr,email,pn,img,t1,t2,t3,t4,t5,t6,t7,t8,t9,t10,t11,t12,t13,t14) VALUES ('Indigo','Missisuaga','indigo@gmail.com','787826355'," + b + ",'10am','8pm','10am','8pm','10am','8pm','10am','8pm','10am','8pm','10am','8pm','10am','8pm')"); 			db.ExecSQL("INSERT INTO Vendors(vname,addr,email,pn,img,t1,t2,t3,t4,t5,t6,t7,t8,t9,t10,t11,t12,t13,t14) VALUES ('The chapters','Aurora','chapters@gmail.com','89803546'," + c + ",'11am','12pm','12am','11pm','12am','11pm','12am','11pm','12am','11pm','12am','11pm','12am','11pm')"); 			db.ExecSQL("INSERT INTO Vendors(vname,addr,email,pn,img,t1,t2,t3,t4,t5,t6,t7,t8,t9,t10,t11,t12,t13,t14) VALUES ('Russell Books','calgary','Rchoice@gmail.com','456783544'," + d + ",'10am','8pm','10am','8pm','10am','8pm','10am','8pm','10am','8pm','10am','8pm','10am','8pm')"); 			db.ExecSQL("INSERT INTO Vendors(vname,addr,email,pn,img,t1,t2,t3,t4,t5,t6,t7,t8,t9,t10,t11,t12,t13,t14) VALUES ('lgreenlight bookstore','Vancouver','learnersway@gmail.com','34563857'," + e + ",'11am','12pm','12am','11pm','12am','11pm','12am','11pm','12am','11pm','12am','11pm','12am','11pm')");   		}  		public override void OnUpgrade(SQLiteDatabase db, int oldVersion, int newVersion) 		{ 			db.ExecSQL("DROP TABLE IF EXISTS UserInfo");   			db.ExecSQL("DROP TABLE IF EXISTS Vendors");  			this.OnCreate(db); 		}   		public void OpenMyDB() 		{ 			this.db = this.WritableDatabase; 		}   		public void insertUserInfo(String iname, String iemail, String ipwd) 		{  			var contentData = new ContentValues();  			contentData.Put(name, iname); 			contentData.Put(email, iemail); 			contentData.Put(pwd, ipwd); 			this.db.Insert(table_UserInfo, null, contentData);  		}   		public void insertVendorInfo(String ivvname, String ivaddr, String ivemail, String ivpn, int ivimg, String ivt1, String ivt2, String ivt3, String ivt4, String ivt5, String ivt6, String ivt7, String ivt8, String ivt9, String ivt10, String ivt11, String ivt12, String ivt13, String ivt14) 		{  			var contentData = new ContentValues();  			contentData.Put(vvname, ivvname); 			contentData.Put(vaddr, ivaddr); 			contentData.Put(vemail, ivemail); 			contentData.Put(vpn, ivpn); 			contentData.Put(vimg, ivimg); 			contentData.Put(vt1, ivt1); 			contentData.Put(vt2, ivt2); 			contentData.Put(vt3, ivt3); 			contentData.Put(vt4, ivt4); 			contentData.Put(vt5, ivt5); 			contentData.Put(vt6, ivt6); 			contentData.Put(vt7, ivt7); 			contentData.Put(vt8, ivt8); 			contentData.Put(vt9, ivt9); 			contentData.Put(vt10, ivt10); 			contentData.Put(vt11, ivt11); 			contentData.Put(vt12, ivt12); 			contentData.Put(vt13, ivt13); 			contentData.Put(vt14, ivt14); 			db.Insert(table_Vendors, null, contentData); 		}  		public ICursor getUsers() 		{  			var columnNames = new[] { idField, name, email, pwd }; 			var userList = this.db.Query(table_UserInfo, columnNames, 											null, null, null, null, null);  			return userList; 		}   		public ICursor getVendors() 		{ 			var columnNames = new[] { idField1, vvname, vaddr, vemail, vpn, vimg, vt1, vt2, vt3, vt4, vt5, vt6, vt7, vt8, vt9, vt10, vt11, vt12, vt13, vt14 }; 			var userList = this.db.Query(table_Vendors, columnNames, 											null, null, null, null, null);  			return userList; 		} 
	}
}

